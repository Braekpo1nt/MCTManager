plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'org.braekpo1nt'
version = '0.1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "onarandombox"
        url = "https://repo.onarandombox.com/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT"
    
//    Multiverse-Core API: 
//    https://github.com/Multiverse/Multiverse-Core/wiki/Developer-API-Starter
//    http://ci.onarandombox.com/job/Multiverse-Core/javadoc/
    compileOnly 'com.onarandombox.multiversecore:Multiverse-Core:4.3.1'
    
//    FastBoard
//    https://github.com/MrMicky-FR/FastBoard
    implementation 'fr.mrmicky:fastboard:1.2.1'
    
    implementation 'com.google.code.gson:gson:2.10.1'
}

shadowJar {

    relocate 'fr.mrmicky.fastboard', 'org.braekpo1nt.mctmanager'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
