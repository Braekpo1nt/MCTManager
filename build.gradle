plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "io.freefair.lombok" version "8.6"
}

group = 'org.braekpo1nt'
version = '1.2.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "onarandombox"
        url = "https://repo.onarandombox.com/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io/"
    }
    maven {
        url = "https://repo.codemc.org/repository/maven-public/"
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT'
//    testImplementation 'com.github.seeseemelk:MockBukkit-v1.21:3.95.1'
    testImplementation 'com.github.MockBukkit:MockBukkit:v3.99.1'
    testImplementation 'org.slf4j:slf4j-jdk14:2.0.5'
    
    compileOnly 'io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.8'

    implementation 'com.google.code.gson:gson:2.10.1'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.jar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "spigot"
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
}

